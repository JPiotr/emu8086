body {
  margin: 0;
  padding: 0;
  /* font-family: "Press Start 2P", cursive; */
}

* {
    outline: solid sandybrown;
    background-color: black;
    color:aliceblue;
}
input{
    /* font-family: "Press Start 2P", cursive; */
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    text-align: center;
    font-size: 23pt;
}
.container {
    margin-left: 1em;
    margin-right: 1em;
    width: calc(100dvw,2em);
    height: 100dvh;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 0.25fr 1.6fr 0.4fr 1fr 1fr 1fr 0.25fr;
    gap: 1em 1em;
    grid-auto-flow: row;
    grid-template-areas:
    "header header header header header header header"
    "console console settings settings settings heap heap"
    "console console visualization visualization visualization heap heap"
    "console console visualization visualization visualization heap heap"
    "registry registry visualization visualization visualization heap heap"
    "registry registry visualization visualization visualization heap heap"
    "footer footer footer footer footer footer footer";
}

.console {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 0.1fr 1.9fr;
    gap: 0px 0px;
    grid-auto-flow: row;
    grid-template-areas:
    "consoleHeader"
    "inputArea";
    grid-area: console;
}

.inputArea {
    grid-area: inputArea;
    display: flex;
    flex-direction: column;
}
#consoleInput{ 
  width: 100%;
  text-align: start;
}
.consoleHistory{
  overflow-y: scroll;
  max-height: 45dvh;
  padding-bottom: 2%;
  padding-left: 2%;
  max-width: 98%;
}
.consoleIn{
  font-size: 11pt;
  text-align: center;
  font-weight: bold;
  align-self: center;
  width: 4%;
}
.consoleInputContainer{
  height: 6%;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
}
.inputArea > span{
    height: 94%;
    width: 100%;
}

.consoleHeader {
    grid-area: consoleHeader;
}

.registry {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
    gap: 1em 1em;
    grid-auto-flow: row;
    grid-template-areas:
    "ax si"
    "bx di"
    "cx bp"
    "dx sp"
    "disp disp";
    grid-area: registry;
}
.registryFlex{
    text-align: center;
    font-size: 23pt;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}
.registryFlex > span{
    width: 30%;
    padding: 0.25em;
}
.registryFlex > input{
    width: 70%;
}
.ax {
  grid-area: ax;
}

.bx {
  grid-area: bx;
}

.cx {
  grid-area: cx;
}

.dx {
  grid-area: dx;
}

.disp {
  grid-area: disp;
}

.si {
  grid-area: si;
}

.di {
  grid-area: di;
}

.bp {
  grid-area: bp;
}

.sp {
  grid-area: sp;
}

.heap {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    "canvas canvas canvas"
    "canvas canvas canvas"
    "canvas canvas canvas";
  grid-area: heap;
}

.canvas {
  grid-area: canvas;
}

.header {
  grid-area: header;
}

.footer {
  grid-area: footer;
}

.settings {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  gap: 1em 1em;
  grid-auto-flow: row;
  grid-template-areas:
    "toRegistry sSi siBx"
    "indexed sDi diBx"
    "base sBx siBp"
    "baseIndexed sBp diBp";
  grid-area: settings;
}
.settings > div{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 20pt;
    text-align: center;
}
.settingSelected{
    background-color: darkcyan;
}
.settingBlocked{
    background-color: gray;
}
.toRegistry {
  grid-area: toRegistry;
}

.indexed {
  grid-area: indexed;
}

.base {
  grid-area: base;
}

.baseIndexed {
  grid-area: baseIndexed;
}

.sSi {
  grid-area: sSi;
}

.sDi {
  grid-area: sDi;
}

.sBx {
  grid-area: sBx;
}

.sBp {
  grid-area: sBp;
}

.siBx {
  grid-area: siBx;
}

.diBx {
  grid-area: diBx;
}

.siBp {
  grid-area: siBp;
}

.diBp {
  grid-area: diBp;
}

.visualization {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    ". . ."
    ". . ."
    ". . .";
  grid-area: visualization;
}
